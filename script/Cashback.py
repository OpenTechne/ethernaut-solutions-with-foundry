original_bytecode = "0x608060405234801561000f575f5ffd5b506004361061004a575f3560e01c806334b151181461004e57806349f426501461006957806366a79de01461009c5780638380edb7146100b1575b5f5ffd5b6100566100c0565b6040519081526020015b60405180910390f35b61008473eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6040516001600160a01b039091168152602001610060565b6100af6100aa366004610340565b6100e2565b005b60405160018152602001610060565b5f805460ff166100dd57505f805460ff1916600117905561271090565b505f90565b60405163ebc3961360e01b815273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6004820152680ad78ebc5ac6200000602482015283906001600160a01b0386169063ebc39613906044015f604051808303815f87803b158015610145575f5ffd5b505af1158015610157573d5f5f3e3d5ffd5b505060405163ebc3961360e01b81526001600160a01b03848116600483015269054b40b1f852bda0000060248301528816925063ebc3961391506044015f604051808303815f87803b1580156101ab575f5ffd5b505af11580156101bd573d5f5f3e3d5ffd5b5050604051637921219560e11b81526001600160a01b038816925063f242432a915061020f903090869073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee90670de0b6b3a764000090600401610399565b5f604051808303815f87803b158015610226575f5ffd5b505af1158015610238573d5f5f3e3d5ffd5b50505050846001600160a01b031663f242432a3084610266856001600160a01b03166001600160a01b031690565b681b1ae4d6e2ef5000006040518563ffffffff1660e01b815260040161028f9493929190610399565b5f604051808303815f87803b1580156102a6575f5ffd5b505af11580156102b8573d5f5f3e3d5ffd5b50506040516323b872dd60e01b815230600482018190526001600160a01b0386811660248401526044830191909152861692506323b872dd91506064015f604051808303815f87803b15801561030c575f5ffd5b505af115801561031e573d5f5f3e3d5ffd5b505050505050505050565b6001600160a01b038116811461033d575f5ffd5b50565b5f5f5f5f60808587031215610353575f5ffd5b843561035e81610329565b9350602085013561036e81610329565b9250604085013561037e81610329565b9150606085013561038e81610329565b939692955090935050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a0608082018190525f9082015260c0019056fea264697066735822122012a40b413b9ed6d34160483017030f3a324325cfa5baa910c0e407dce89fb8e464736f6c634300081e0033"

offset_to_add = 0x1d

# Opcodes
PUSH2 = 0x61

hex_body = original_bytecode[2:] if original_bytecode.startswith("0x") else original_bytecode
code_bytes = bytearray.fromhex(hex_body)
length = len(code_bytes)

i = 0
while i < length:
    op = code_bytes[i]
    if op == PUSH2:
        if i + 3 < length and code_bytes[i + 1] != 0x27 and code_bytes[i + 1] != 0x10: # Avoid to touch the hardcoded SUPERCASHBACK_NONCE value
            hi = code_bytes[i + 1]
            lo = code_bytes[i + 2]
            original_val = (hi << 8) | lo
            new_val = (original_val + offset_to_add) & 0xFFFF
            code_bytes[i + 1] = (new_val >> 8) & 0xFF
            code_bytes[i + 2] = new_val & 0xFF
            # Advance to next opcode after the immediate bytes (do not skip JUMPI so we just increment sequentially)
    i += 1

print(code_bytes.hex())